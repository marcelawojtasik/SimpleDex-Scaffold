{
  "address": "0xd57Ec4740FaE036D446E653B83f88a82975EE9bB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityB",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountAIn",
          "type": "uint256"
        }
      ],
      "name": "swapAforB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountBIn",
          "type": "uint256"
        }
      ],
      "name": "swapBforA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf5fbd7e0deaa7e0f2c07a5e3d261aa11f02829fa9df2bd4636f47402c193719f",
  "receipt": {
    "to": null,
    "from": "0xafe62bdBA98ADD6f20fF618053621EDE438CD04F",
    "contractAddress": "0xd57Ec4740FaE036D446E653B83f88a82975EE9bB",
    "transactionIndex": 41,
    "gasUsed": "700645",
    "logsBloom": "0x
    "blockHash": "0x86f86134c74b05c2f0463af1cb11eeb69a0f5488a315d23f39724ba55e3aef4b",
    "transactionHash": "0xf5fbd7e0deaa7e0f2c07a5e3d261aa11f02829fa9df2bd4636f47402c193719f",
    "logs": [],
    "blockNumber": 7287793,
    "cumulativeGasUsed": "8412410",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf3945912c8F996B67575C4aB937b21802c37BA42",
    "0x81406F687357ebF5df9Dd77DF4d705B2e54856cb"
  ],
  "numDeployments": 1,
  "solcInputHash": "a8313fc83f2b69debbe4852abd718c32",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountAIn\",\"type\":\"uint256\"}],\"name\":\"swapAforB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountBIn\",\"type\":\"uint256\"}],\"name\":\"swapBforA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"MarcelaWojtasik\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"removeLiquidity(uint256,uint256)\":{\"notice\":\"Remuevo liquidez de a pares: una cantidad v\\u00e1lida de tokens A y otra de tokens B. Le resto a la liquidez los tokens removidos  Emito evento que informa cambio en variable de estado \"}},\"notice\":\"A smart contract that implements a decentralized exchange (DEX) for two ERC20 tokens. It also allows changing state variables of the contract and tracking the changes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleDex.sol\":\"SimpleDex\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SimpleDex.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n/**\\r\\n * A smart contract that implements a decentralized exchange (DEX) for two ERC20 tokens.\\r\\n * It also allows changing state variables of the contract and tracking the changes\\r\\n * @author MarcelaWojtasik\\r\\n */\\r\\ncontract SimpleDex {\\r\\n    // State Variables\\r\\n    address owner;\\r\\n    IERC20 tokenA;\\r\\n    IERC20 tokenB;\\r\\n    uint256 public liquidityA;\\r\\n    uint256 public liquidityB;\\r\\n\\r\\n    // Events: a way to emit log statements from smart contract that can be listened to by external parties\\r\\n    event LiquidityAdded(address indexed provider, uint256 amountA, uint256 amountB);\\r\\n    event LiquidityRemoved(address indexed provider, uint256 amountA, uint256 amountB);\\r\\n    event Swap(address indexed trader, address tokenIn, uint256 amountIn, address tokenOut, uint256 amountOut);\\r\\n    \\r\\n    // Constructor: Called once on contract deployment\\r\\n    constructor(address _tokenA, address _tokenB) {\\r\\n        tokenA = IERC20(_tokenA);\\r\\n        tokenB = IERC20(_tokenB);\\r\\n    }\\r\\n    //modifier to restrict critical functions to the contract owner.\\r\\n    modifier onlyOwner() {\\r\\n        owner == msg.sender;\\r\\n        _;\\r\\n    }\\r\\n\\r\\n/* *A\\u00f1ado liquidez en pares: una cantidad v\\u00e1lida de tokens A y otra de tokens B.\\r\\n*Le sumo a la liquidez los tokens a\\u00f1adidos\\r\\n*Emito evento que informa cambio en variable de estado */\\r\\n    function addLiquidity (uint256 amountA, uint256 amountB) external onlyOwner{\\r\\n        require(amountA > 0 && amountB > 0, \\\"Amounts must be greater than zero\\\");\\r\\n\\r\\n        tokenA.transferFrom(msg.sender, address(this), amountA);\\r\\n        tokenB.transferFrom(msg.sender, address(this), amountB);\\r\\n\\r\\n        liquidityA += amountA;\\r\\n        liquidityB += amountB;\\r\\n\\r\\n        emit LiquidityAdded(msg.sender, amountA, amountB);\\r\\n    }\\r\\n\\r\\n/* *Calculo cantidad de  tokens q recibir\\u00e9 al realizar intercambio bajo modelo AMM\\r\\n*Aseguro liquidez del pool: Formula de producto constante (x + dx) * (y - dy) = x * y */\\r\\n    function amountOut(uint256 amountIn, uint256 liquidityIn, uint256 liquidityOut) private pure returns (uint256) {\\r\\n        require(amountIn > 0 && liquidityIn > 0 && liquidityOut > 0, \\\"Invalid reserves or input\\\");\\r\\n        return (amountIn * liquidityOut) / (liquidityIn + amountIn);\\r\\n    }   \\r\\n\\r\\n/* *Swap de tokens AforB\\r\\n*Le sumo a la liquidez los tokens a\\u00f1adidos y resto los resultantes al exchange\\r\\n*Emito evento que informa cambio en variable de estado */\\r\\n    function swapAforB(uint256 amountAIn) public {\\r\\n        require(amountAIn > 0, \\\"Amount must be greater than zero\\\");\\r\\n        uint256 amountBOut = amountOut (amountAIn, liquidityA, liquidityB);\\r\\n\\r\\n        tokenA.transferFrom(msg.sender, address(this), amountAIn);\\r\\n        tokenB.transfer(msg.sender, amountBOut);\\r\\n\\r\\n        liquidityA += amountAIn;\\r\\n        liquidityB -= amountBOut;\\r\\n\\r\\n        emit Swap(msg.sender, address(tokenA), amountAIn, address(tokenB), amountBOut);\\r\\n    }\\r\\n\\r\\n\\r\\n    function swapBforA(uint256 amountBIn) public {\\r\\n        require(amountBIn > 0, \\\"Amount must be greater than zero\\\");        \\r\\n        uint256 amountAOut = amountOut(amountBIn, liquidityB, liquidityA);\\r\\n        \\r\\n        tokenB.transferFrom(msg.sender, address(this), amountBIn);\\r\\n        tokenA.transfer(msg.sender, amountAOut);\\r\\n\\r\\n        liquidityB += amountBIn;\\r\\n        liquidityA -= amountAOut;\\r\\n\\r\\n        emit Swap(msg.sender, address(tokenB), amountBIn, address(tokenA), amountAOut);\\r\\n    }\\r\\n\\r\\n/**Remuevo liquidez de a pares: una cantidad v\\u00e1lida de tokens A y otra de tokens B.\\r\\n*Le resto a la liquidez los tokens removidos \\r\\n*Emito evento que informa cambio en variable de estado */\\r\\n\\r\\n    function removeLiquidity(uint256 amountA, uint256 amountB) external onlyOwner{\\r\\n        require(amountA <= liquidityA && amountB <= liquidityB, \\\"Insufficient liquidity\\\");\\r\\n\\r\\n        liquidityA -= amountA;\\r\\n        liquidityB -= amountB;\\r\\n\\r\\n        tokenA.transfer(msg.sender, amountA);\\r\\n        tokenB.transfer(msg.sender, amountB);\\r\\n\\r\\n        emit LiquidityRemoved(msg.sender, amountA, amountB);\\r\\n    }\\r\\n\\r\\n//Obtenci\\u00f3n de precio del token: Verifico que la direcci\\u00f3n ingresada sea v\\u00e1lida.\\r\\n//Si el token ingresado es TokenA, la funci\\u00f3n calcula el precio dividiendo la cantidad de TokenB en el pool entre la cantidad de TokenA. A la inversa si no es TokenA (Entonces es B)\\r\\n//Multiplico por 10e18 para manejar los decimales y asegurar la precisi\\u00f3n en los c\\u00e1lculos.\\r\\n    function getPrice(address _token) external view returns (uint256) {\\r\\n        require(_token == address(tokenA) || _token == address(tokenB), \\\"Invalid token\\\");\\r\\n\\r\\n        if (_token == address(tokenA)) {\\r\\n            return liquidityB * 1e18 / liquidityA;\\r\\n        } else {\\r\\n            return liquidityA * 1e18 / liquidityB;\\r\\n        }\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x4b8d9c7d0805c75e3cfc2821871180e6370d883efd6ad6f6bb157f626292eeea\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610b97380380610b9783398101604081905261002f9161007c565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610ad9806100be6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638014a7aa1161005b5780638014a7aa146100b95780639cd441da146100ce5780639d7de6b3146100e1578063e4f1f70a146100f457600080fd5b806324731cff1461008257806341976e091461009d57806379629b69146100b0575b600080fd5b61008b60045481565b60405190815260200160405180910390f35b61008b6100ab36600461097d565b610107565b61008b60035481565b6100cc6100c73660046109ad565b6101ca565b005b6100cc6100dc3660046109c6565b6103ab565b6100cc6100ef3660046109c6565b610568565b6100cc6101023660046109ad565b610715565b6001546000906001600160a01b038381169116148061013357506002546001600160a01b038381169116145b6101745760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b60448201526064015b60405180910390fd5b6001546001600160a01b03908116908316036101b2576003546004546101a290670de0b6b3a76400006109fe565b6101ac9190610a15565b92915050565b6004546003546101a290670de0b6b3a76400006109fe565b6000811161021a5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161016b565b600061022b826004546003546108ee565b6002546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd9061026090339030908790600401610a37565b6020604051808303816000875af115801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a39190610a5b565b5060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103199190610a5b565b50816004600082825461032c9190610a7d565b9250508190555080600360008282546103459190610a90565b9091555050600254600154604080516001600160a01b0393841681526020810186905292909116908201526060810182905233907f5380cf97d8f645d3c4896da60c053458dca03a3a31cec642ac80e1ddf0d8d02a906080015b60405180910390a25050565b81158015906103ba5750600081115b6104105760405162461bcd60e51b815260206004820152602160248201527f416d6f756e7473206d7573742062652067726561746572207468616e207a65726044820152606f60f81b606482015260840161016b565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061044490339030908790600401610a37565b6020604051808303816000875af1158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610a5b565b506002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104bc90339030908690600401610a37565b6020604051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610a5b565b5081600360008282546105129190610a7d565b92505081905550806004600082825461052b9190610a7d565b9091555050604080518381526020810183905233917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910161039f565b600354821180159061057c57506004548111155b6105c15760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b604482015260640161016b565b81600360008282546105d39190610a90565b9250508190555080600460008282546105ec9190610a90565b909155505060015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190610a5b565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610a5b565b50604080518381526020810183905233917f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd059910161039f565b600081116107655760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161016b565b6000610776826003546004546108ee565b6001546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906107ab90339030908790600401610a37565b6020604051808303816000875af11580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ee9190610a5b565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190610a5b565b5081600360008282546108779190610a7d565b9250508190555080600460008282546108909190610a90565b9091555050600154600254604080516001600160a01b0393841681526020810186905292909116908201526060810182905233907f5380cf97d8f645d3c4896da60c053458dca03a3a31cec642ac80e1ddf0d8d02a9060800161039f565b600080841180156108ff5750600083115b801561090b5750600082115b6109575760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207265736572766573206f7220696e70757400000000000000604482015260640161016b565b6109618484610a7d565b61096b83866109fe565b6109759190610a15565b949350505050565b60006020828403121561098f57600080fd5b81356001600160a01b03811681146109a657600080fd5b9392505050565b6000602082840312156109bf57600080fd5b5035919050565b600080604083850312156109d957600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101ac576101ac6109e8565b600082610a3257634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610a6d57600080fd5b815180151581146109a657600080fd5b808201808211156101ac576101ac6109e8565b818103818111156101ac576101ac6109e856fea2646970667358221220ffd74de3cc958859a63f41d11a5b45534b17aa47d28578cc21eadceb83a8196964736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638014a7aa1161005b5780638014a7aa146100b95780639cd441da146100ce5780639d7de6b3146100e1578063e4f1f70a146100f457600080fd5b806324731cff1461008257806341976e091461009d57806379629b69146100b0575b600080fd5b61008b60045481565b60405190815260200160405180910390f35b61008b6100ab36600461097d565b610107565b61008b60035481565b6100cc6100c73660046109ad565b6101ca565b005b6100cc6100dc3660046109c6565b6103ab565b6100cc6100ef3660046109c6565b610568565b6100cc6101023660046109ad565b610715565b6001546000906001600160a01b038381169116148061013357506002546001600160a01b038381169116145b6101745760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b60448201526064015b60405180910390fd5b6001546001600160a01b03908116908316036101b2576003546004546101a290670de0b6b3a76400006109fe565b6101ac9190610a15565b92915050565b6004546003546101a290670de0b6b3a76400006109fe565b6000811161021a5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161016b565b600061022b826004546003546108ee565b6002546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd9061026090339030908790600401610a37565b6020604051808303816000875af115801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a39190610a5b565b5060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103199190610a5b565b50816004600082825461032c9190610a7d565b9250508190555080600360008282546103459190610a90565b9091555050600254600154604080516001600160a01b0393841681526020810186905292909116908201526060810182905233907f5380cf97d8f645d3c4896da60c053458dca03a3a31cec642ac80e1ddf0d8d02a906080015b60405180910390a25050565b81158015906103ba5750600081115b6104105760405162461bcd60e51b815260206004820152602160248201527f416d6f756e7473206d7573742062652067726561746572207468616e207a65726044820152606f60f81b606482015260840161016b565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061044490339030908790600401610a37565b6020604051808303816000875af1158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610a5b565b506002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104bc90339030908690600401610a37565b6020604051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610a5b565b5081600360008282546105129190610a7d565b92505081905550806004600082825461052b9190610a7d565b9091555050604080518381526020810183905233917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910161039f565b600354821180159061057c57506004548111155b6105c15760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b604482015260640161016b565b81600360008282546105d39190610a90565b9250508190555080600460008282546105ec9190610a90565b909155505060015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106669190610a5b565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610a5b565b50604080518381526020810183905233917f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd059910161039f565b600081116107655760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161016b565b6000610776826003546004546108ee565b6001546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906107ab90339030908790600401610a37565b6020604051808303816000875af11580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ee9190610a5b565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190610a5b565b5081600360008282546108779190610a7d565b9250508190555080600460008282546108909190610a90565b9091555050600154600254604080516001600160a01b0393841681526020810186905292909116908201526060810182905233907f5380cf97d8f645d3c4896da60c053458dca03a3a31cec642ac80e1ddf0d8d02a9060800161039f565b600080841180156108ff5750600083115b801561090b5750600082115b6109575760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207265736572766573206f7220696e70757400000000000000604482015260640161016b565b6109618484610a7d565b61096b83866109fe565b6109759190610a15565b949350505050565b60006020828403121561098f57600080fd5b81356001600160a01b03811681146109a657600080fd5b9392505050565b6000602082840312156109bf57600080fd5b5035919050565b600080604083850312156109d957600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176101ac576101ac6109e8565b600082610a3257634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610a6d57600080fd5b815180151581146109a657600080fd5b808201808211156101ac576101ac6109e8565b818103818111156101ac576101ac6109e856fea2646970667358221220ffd74de3cc958859a63f41d11a5b45534b17aa47d28578cc21eadceb83a8196964736f6c63430008140033",
  "devdoc": {
    "author": "MarcelaWojtasik",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "removeLiquidity(uint256,uint256)": {
        "notice": "Remuevo liquidez de a pares: una cantidad válida de tokens A y otra de tokens B. Le resto a la liquidez los tokens removidos  Emito evento que informa cambio en variable de estado "
      }
    },
    "notice": "A smart contract that implements a decentralized exchange (DEX) for two ERC20 tokens. It also allows changing state variables of the contract and tracking the changes",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 940,
        "contract": "contracts/SimpleDex.sol:SimpleDex",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 943,
        "contract": "contracts/SimpleDex.sol:SimpleDex",
        "label": "tokenA",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)877"
      },
      {
        "astId": 946,
        "contract": "contracts/SimpleDex.sol:SimpleDex",
        "label": "tokenB",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)877"
      },
      {
        "astId": 948,
        "contract": "contracts/SimpleDex.sol:SimpleDex",
        "label": "liquidityA",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 950,
        "contract": "contracts/SimpleDex.sol:SimpleDex",
        "label": "liquidityB",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)877": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}